"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import ..k8s.apimachinery.pkg.apis.meta.v1


schema Repository:
    r"""
    A Repository is an API type.

    Attributes
    ----------
    apiVersion : str, default is "repository.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Repository", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RepositoryUpboundIoV1alpha1RepositorySpec, default is Undefined, required
        spec
    status : RepositoryUpboundIoV1alpha1RepositoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "repository.upbound.io/v1alpha1" = "repository.upbound.io/v1alpha1"

    kind: "Repository" = "Repository"

    metadata?: v1.ObjectMeta

    spec: RepositoryUpboundIoV1alpha1RepositorySpec

    status?: RepositoryUpboundIoV1alpha1RepositoryStatus


schema RepositoryUpboundIoV1alpha1RepositorySpec:
    r"""
    A RepositorySpec defines the desired state of a Repository.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RepositoryUpboundIoV1alpha1RepositorySpecForProvider, default is Undefined, required
        for provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RepositoryUpboundIoV1alpha1RepositorySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RepositoryUpboundIoV1alpha1RepositorySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RepositoryUpboundIoV1alpha1RepositorySpecForProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RepositoryUpboundIoV1alpha1RepositorySpecProviderConfigRef

    publishConnectionDetailsTo?: RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RepositoryUpboundIoV1alpha1RepositorySpecWriteConnectionSecretToRef


schema RepositoryUpboundIoV1alpha1RepositorySpecForProvider:
    r"""
    RepositoryParameters are the configurable fields of a Repository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of this Repository.
    organizationName : str, default is Undefined, required
        OrganizationName is the name of the organization to which the repository belongs.
    """


    name: str

    organizationName: str


    check:
        len(organizationName) >= 1


schema RepositoryUpboundIoV1alpha1RepositorySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepositoryUpboundIoV1alpha1RepositorySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepositoryUpboundIoV1alpha1RepositorySpecProviderConfigRefPolicy


schema RepositoryUpboundIoV1alpha1RepositorySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRef

    metadata?: RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToMetadata

    name: str


schema RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRefPolicy


schema RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepositoryUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RepositoryUpboundIoV1alpha1RepositorySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RepositoryUpboundIoV1alpha1RepositoryStatus:
    r"""
    A RepositoryStatus represents the observed state of a Repository.

    Attributes
    ----------
    atProvider : RepositoryUpboundIoV1alpha1RepositoryStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RepositoryUpboundIoV1alpha1RepositoryStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: RepositoryUpboundIoV1alpha1RepositoryStatusAtProvider

    conditions?: [RepositoryUpboundIoV1alpha1RepositoryStatusConditionsItems0]


schema RepositoryUpboundIoV1alpha1RepositoryStatusAtProvider:
    r"""
    RepositoryObservation are the observable fields of a Repository.

    Attributes
    ----------
    accountId : int, default is Undefined, required
        account Id
    createdAt : str, default is Undefined, required
        created at
    currentVersion : str, default is Undefined, optional
        current version
    name : str, default is Undefined, required
        name
    official : bool, default is Undefined, required
        official
    public : bool, default is Undefined, required
        public
    repositoryId : int, default is Undefined, required
        repository Id
    $type : str, default is Undefined, optional
        RepositoryType is the base type for repository types
    updatedAt : str, default is Undefined, optional
        updated at
    """


    accountId: int

    createdAt: str

    currentVersion?: str

    name: str

    official: bool

    public: bool

    repositoryId: int

    $type?: str

    updatedAt?: str


schema RepositoryUpboundIoV1alpha1RepositoryStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


